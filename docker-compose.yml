version: "3.9"
services:
  # --------------------Servicio del backend-------------------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports: 
      - '8090:8080'
    depends_on:
      db:
        condition: service_healthy # Asegura que el backend se levante despu√©s de la base de datos
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}


  # --------------------Servicio de front-end-------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3031:3001" 
    depends_on:
      - backend 

  # -------------------Servicio de BD MySQL--------------------
  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3316:3306" # Puerto para conectarte a MySQL
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql # Volumen para persistir datos
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 30s
      retries: 10

  # --------------------Cliente MySQL -------------------
  mysql-client:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    depends_on:
      - db
    ports:
      - "8081:80" # Accedes al cliente desde localhost:8081
    environment:
      PMA_HOST: db
      PMA_PORT: 3306

volumes:
  db_data:
